{"version":3,"sources":["helpers/fetch.js","components/header/Header.js","components/card/Card.js","components/body/Body.js","index.js"],"names":["baseUrl","fetchP","data","method","url","fetch","headers","body","JSON","stringify","useStyles","makeStyles","media","height","width","marginTop","backgroundColor","Header","classes","className","src","alt","root","minWidth","border","marginLeft","marginRight","marginBottom","flexGrow","logo","company","color","fontFamily","join","fontSize","fontWeight","position","postedAt","margin","containerLanguage","alignItems","language","paddingLeft","paddingRight","new","borderRadius","padding","feature","CardBody","Card","variant","Grid","container","xs","Box","display","flexDirection","featured","contract","location","style","justifyContent","flex","languages","map","dats","keyb","Body","useState","saveData","useEffect","traerData","then","res","console","log","a","resp","json","dat","key","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"wLAAMA,EAAQ,qCACRC,EAAO,SAACC,GAAqB,IAAhBC,EAAe,uDAAR,MAChBC,EAAI,GAAD,OAAIJ,GACb,MAAY,QAATG,EACQE,MAAM,GAAD,OAAID,IAETC,MAAM,GAAD,OAAID,GAAM,CAClBD,OAAOA,EACPG,QAAQ,CACR,eAAe,oBACjBC,KAAKC,KAAKC,UAAUP,M,OCRxBQ,EAAYC,YAAW,CACzBC,MAAO,CACLC,OAAQ,MACRC,MAAO,OACPC,UAAW,EACXC,gBAAiB,aAGVC,EAAS,WAClB,IAAMC,EAAUR,IAChB,OACI,qBAAKS,UAAWD,EAAQN,MAAOQ,IAAK,iEAAkEC,IAAI,U,wBCT5GX,EAAYC,YAAW,CAC3BW,KAAM,CACJC,SAAU,IACVC,OAAQ,GACRC,WAAY,IACZC,YAAa,GACbX,UAAW,GACXY,aAAc,GACdC,SAAU,GAEZhB,MAAO,CACLC,OAAQ,MACRC,MAAO,OACPC,UAAW,EACXC,gBAAiB,WAEnBa,KAAM,CACJhB,OAAQ,QACRC,MAAO,QACPW,WAAY,MACZV,UAAW,OAEbe,QAAS,CACPC,MAAO,UACPC,WAAY,CAAC,UAAW,eAAeC,KAAK,KAC5CC,SAAU,OACVC,WAAY,SACZV,WAAY,MACZC,YAAa,OAEfU,SAAU,CACRJ,WAAY,CAAC,UAAW,cAAcC,KAAK,KAC3CC,SAAU,OACVC,WAAY,UAEdE,SAAU,CACRL,WAAY,CAAC,UAAW,cAAcC,KAAK,KAC3CC,SAAU,OACVH,MAAO,UACPO,OAAQ,GAEVC,kBAAmB,CACjBC,WAAY,OAEdC,SAAU,CACRzB,gBAAiB,UACjBgB,WAAY,CAAC,UAAW,cAAcC,KAAK,KAC3CF,MAAO,UACPI,WAAY,SACZD,SAAU,OACVI,OAAQ,EACRI,YAAa,GACbC,aAAc,IAEhBC,IAAK,CACH5B,gBAAiB,UACjBgB,WAAY,CAAC,UAAW,cAAcC,KAAK,KAC3CF,MAAO,UACPI,WAAY,SACZD,SAAU,OACVW,aAAc,GACd9B,UAAW,GACXU,WAAY,GACZqB,QAAS,EACTJ,YAAa,GACbC,aAAc,IAEhBI,QAAS,CACP/B,gBAAiB,UACjBgB,WAAY,CAAC,UAAW,cAAcC,KAAK,KAC3CF,MAAO,UACPI,WAAY,SACZD,SAAU,OACVW,aAAc,GACd9B,UAAW,GACXU,WAAY,GACZqB,QAAS,EACTJ,YAAa,GACbC,aAAc,MAGLK,EAAW,SAAC,GAAc,IAAZ9C,EAAW,EAAXA,KACnBgB,EAAUR,IAChB,OACE,cAACuC,EAAA,EAAD,CAAM9B,UAAWD,EAAQI,KAAM4B,QAAQ,YAAvC,SACE,eAACC,EAAA,EAAD,CAAMC,WAAS,EAAf,UACE,cAACD,EAAA,EAAD,CAAME,GAAI,EAAV,SACE,qBAAKlC,UAAWD,EAAQW,KAAMR,IAAI,MAAMD,IAAKlB,EAAK2B,SAGpD,cAACsB,EAAA,EAAD,CAAME,GAAI,GAAV,SACE,eAACC,EAAA,EAAD,CAAKC,QAAQ,OAAOC,cAAc,MAAlC,UACE,gCACE,eAACF,EAAA,EAAD,CAAKC,QAAQ,OAAOC,cAAc,MAAlC,UACE,mBAAGrC,UAAWD,EAAQY,QAAtB,SAAgC5B,EAAK4B,WAEvB,IAAb5B,EAAK0C,KACJ,8BACE,mBAAGzB,UAAWD,EAAQ0B,IAAtB,qBAGe,IAAlB1C,EAAKuD,UACJ,8BACE,mBAAGtC,UAAWD,EAAQ6B,QAAtB,0BAIN,mBAAG5B,UAAWD,EAAQkB,SAAtB,SAAiClC,EAAKkC,WAEtC,eAACkB,EAAA,EAAD,CAAKC,QAAQ,OAAOC,cAAc,MAAlC,UACE,mBAAGrC,UAAWD,EAAQmB,SAAtB,SAAiCnC,EAAKmC,WACtC,mBAAGlB,UAAWD,EAAQmB,SAAtB,oBACA,mBAAGlB,UAAWD,EAAQmB,SAAtB,SAAiCnC,EAAKwD,WACtC,mBAAGvC,UAAWD,EAAQmB,SAAtB,oBACA,mBAAGlB,UAAWD,EAAQmB,SAAtB,SAAiCnC,EAAKyD,iBAI1C,qBACEC,MAAO,CACLL,QAAS,OACTf,WAAY,SACZqB,eAAgB,WAChBC,KAAM,EACNpC,YAAa,IANjB,SASE,cAAC4B,EAAA,EAAD,CAAKC,QAAQ,OAAOC,cAAc,MAAlC,SACGtD,EAAK6D,UAAUC,KAAI,SAACC,EAAMC,GACzB,OACE,qBAAK/C,UAAWD,EAAQuB,SAAxB,SACE,4BAAIwB,KADiCC,qBCjIrDxD,EAAYC,YAAW,CAC3ByC,UAAW,CACTpC,gBAAiB,aAIRmD,EAAO,WAClB,MAAyBC,mBAAS,IAAlC,mBAAOlE,EAAP,KAAamE,EAAb,KACMnD,EAAUR,IAGhB4D,qBAAU,WACRC,IAAYC,MAAK,SAACC,GAChBC,QAAQC,IAAIzE,QAEb,IAEH,IAAMqE,EAAS,uCAAG,8BAAAK,EAAA,sEACG3E,IADH,cACV4E,EADU,gBAEGA,EAAKC,OAFR,OAEVvE,EAFU,OAGhB8D,EAAS9D,GAHO,2CAAH,qDAMf,OACE,sBAAKY,UAAWD,EAAQkC,UAAxB,UACE,cAAC,EAAD,IACA,8BACGlD,EAAK8D,KAAI,SAACe,EAAKC,GAEd,OADAN,QAAQC,IAAII,GAEV,cAAC,EAAD,CAAU7E,KAAM6E,GAAUC,YC7BtCC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.2b3e55d9.chunk.js","sourcesContent":["const baseUrl=\"https://webappinode.herokuapp.com/\";\r\nconst fetchP=(data,method='GET')=>{\r\n    const url=`${baseUrl}`;\r\n    if(method==='GET'){\r\n        return fetch(`${url}`);\r\n    }else{\r\n        return fetch(`${url}`,{\r\n            method:method,\r\n            headers:{\r\n            'Content-Type':'application/json',\r\n        },body:JSON.stringify(data)});\r\n    }\r\n}\r\nexport{\r\n    fetchP\r\n}","import React from 'react';\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nconst useStyles = makeStyles({\r\n    media: {\r\n      height: \"20%\",\r\n      width: \"100%\",\r\n      marginTop: 0,\r\n      backgroundColor: \"#5EA4A6\",\r\n    }\r\n  });\r\nexport const Header = () => {\r\n    const classes = useStyles();\r\n    return (\r\n        <img className={classes.media} src={\"https://webappinode.herokuapp.com/images/bg-header-desktop.svg\"} alt=\"Logo\" />\r\n    )\r\n}\r\n","import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport { Box, Grid } from \"@material-ui/core\";\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    minWidth: 275,\r\n    border: 20,\r\n    marginLeft: 100,\r\n    marginRight: 80,\r\n    marginTop: 25,\r\n    marginBottom: 25,\r\n    flexGrow: 1,\r\n  },\r\n  media: {\r\n    height: \"20%\",\r\n    width: \"100%\",\r\n    marginTop: 0,\r\n    backgroundColor: \"#5EA4A6\",\r\n  },\r\n  logo: {\r\n    height: \"150px\",\r\n    width: \"150px\",\r\n    marginLeft: \"20%\",\r\n    marginTop: \"10%\",\r\n  },\r\n  company: {\r\n    color: \"#5EA4A6\",\r\n    fontFamily: [\"Spartan\", \" sans-serif\"].join(\",\"),\r\n    fontSize: \"15px\",\r\n    fontWeight: \"bolder\",\r\n    marginLeft: \"5px\",\r\n    marginRight: \"10x\",\r\n  },\r\n  position: {\r\n    fontFamily: [\"Spartan\", \"sans-serif\"].join(\",\"),\r\n    fontSize: \"20px\",\r\n    fontWeight: \"bolder\",\r\n  },\r\n  postedAt: {\r\n    fontFamily: [\"Spartan\", \"sans-serif\"].join(\",\"),\r\n    fontSize: \"15px\",\r\n    color: \"#646464\",\r\n    margin: 8,\r\n  },\r\n  containerLanguage: {\r\n    alignItems: \"end\",\r\n  },\r\n  language: {\r\n    backgroundColor: \"#D6EBED\",\r\n    fontFamily: [\"Spartan\", \"sans-serif\"].join(\",\"),\r\n    color: \"#5EA4A6\",\r\n    fontWeight: \"bolder\",\r\n    fontSize: \"10px\",\r\n    margin: 5,\r\n    paddingLeft: 15,\r\n    paddingRight: 15,\r\n  },\r\n  new: {\r\n    backgroundColor: \"#5EA4A6\",\r\n    fontFamily: [\"Spartan\", \"sans-serif\"].join(\",\"),\r\n    color: \"#FFFFFF\",\r\n    fontWeight: \"bolder\",\r\n    fontSize: \"10px\",\r\n    borderRadius: 10,\r\n    marginTop: 15,\r\n    marginLeft: 10,\r\n    padding: 5,\r\n    paddingLeft: 15,\r\n    paddingRight: 15,\r\n  },\r\n  feature: {\r\n    backgroundColor: \"#000000\",\r\n    fontFamily: [\"Spartan\", \"sans-serif\"].join(\",\"),\r\n    color: \"#FFFFFF\",\r\n    fontWeight: \"bolder\",\r\n    fontSize: \"10px\",\r\n    borderRadius: 10,\r\n    marginTop: 15,\r\n    marginLeft: 10,\r\n    padding: 5,\r\n    paddingLeft: 15,\r\n    paddingRight: 15,\r\n  },\r\n});\r\nexport const CardBody = ({ data }) => {\r\n  const classes = useStyles();\r\n  return (\r\n    <Card className={classes.root} variant=\"elevation\">\r\n      <Grid container>\r\n        <Grid xs={2}>\r\n          <img className={classes.logo} alt=\"img\" src={data.logo} />\r\n        </Grid>\r\n\r\n        <Grid xs={10}>\r\n          <Box display=\"flex\" flexDirection=\"row\">\r\n            <div>\r\n              <Box display=\"flex\" flexDirection=\"row\">\r\n                <p className={classes.company}>{data.company}</p>\r\n\r\n                {data.new === true && (\r\n                  <div>\r\n                    <p className={classes.new}>NEW!</p>\r\n                  </div>\r\n                )}\r\n                {data.featured === true && (\r\n                  <div>\r\n                    <p className={classes.feature}>FEATURE</p>\r\n                  </div>\r\n                )}\r\n              </Box>\r\n              <p className={classes.position}>{data.position}</p>\r\n\r\n              <Box display=\"flex\" flexDirection=\"row\">\r\n                <p className={classes.postedAt}>{data.postedAt}</p>\r\n                <p className={classes.postedAt}>•</p>\r\n                <p className={classes.postedAt}>{data.contract}</p>\r\n                <p className={classes.postedAt}>•</p>\r\n                <p className={classes.postedAt}>{data.location}</p>\r\n              </Box>\r\n            </div>\r\n\r\n            <div\r\n              style={{\r\n                display: \"flex\",\r\n                alignItems: \"center\",\r\n                justifyContent: \"flex-end\",\r\n                flex: 1,\r\n                marginRight: 20,\r\n              }}\r\n            >\r\n              <Box display=\"flex\" flexDirection=\"row\">\r\n                {data.languages.map((dats, keyb) => {\r\n                  return (\r\n                    <div className={classes.language} key={keyb}>\r\n                      <p>{dats}</p>\r\n                    </div>\r\n                  );\r\n                })}\r\n              </Box>\r\n            </div>\r\n          </Box>\r\n        </Grid>\r\n      </Grid>\r\n    </Card>\r\n  );\r\n};\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { fetchP } from \"../../helpers/fetch\";\r\nimport {Header} from '../header/Header';\r\nimport { CardBody } from \"../card/Card\";\r\nconst useStyles = makeStyles({\r\n  container: {\r\n    backgroundColor: \"#F0FAFB\",\r\n  }\r\n});\r\n\r\nexport const Body = () => {\r\n  const [data, saveData] = useState([]);\r\n  const classes = useStyles();\r\n\r\n\r\n  useEffect(() => {\r\n    traerData().then((res) => {\r\n      console.log(data);\r\n    });\r\n  }, []);\r\n\r\n  const traerData = async () => {\r\n    const resp = await fetchP();\r\n    const body = await resp.json();\r\n    saveData(body);\r\n  };\r\n\r\n  return (\r\n    <div className={classes.container}>\r\n      <Header />\r\n      <div>\r\n        {data.map((dat, key) => {\r\n          console.log(dat);\r\n          return (\r\n            <CardBody data={dat} key={key}/>\r\n          );\r\n        })}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Body } from './components/body/Body';\r\n\r\n\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Body />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n\r\n"],"sourceRoot":""}